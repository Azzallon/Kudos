// Code generated by MockGen. DO NOT EDIT.
// Source: services/interfaces/interfaces.go

package mock_interfaces

import (
	gomock "github.com/golang/mock/gomock"
	domain "kudos/domain"
	errs "kudos/domain/errs"
	reflect "reflect"
)

// MockIPersonService is a mock of IPersonService interface
type MockIPersonService struct {
	ctrl     *gomock.Controller
	recorder *MockIPersonServiceMockRecorder
}

// MockIPersonServiceMockRecorder is the mock recorder for MockIPersonService
type MockIPersonServiceMockRecorder struct {
	mock *MockIPersonService
}

// NewMockIPersonService creates a new mock instance
func NewMockIPersonService(ctrl *gomock.Controller) *MockIPersonService {
	mock := &MockIPersonService{ctrl: ctrl}
	mock.recorder = &MockIPersonServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockIPersonService) EXPECT() *MockIPersonServiceMockRecorder {
	return _m.recorder
}

// GetPeople mocks base method
func (_m *MockIPersonService) GetPeople() ([]domain.Person, *errs.ApiError) {
	ret := _m.ctrl.Call(_m, "GetPeople")
	ret0, _ := ret[0].([]domain.Person)
	ret1, _ := ret[1].(*errs.ApiError)
	return ret0, ret1
}

// GetPeople indicates an expected call of GetPeople
func (_mr *MockIPersonServiceMockRecorder) GetPeople() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetPeople", reflect.TypeOf((*MockIPersonService)(nil).GetPeople))
}

// CreatePerson mocks base method
func (_m *MockIPersonService) CreatePerson(name string) *errs.ApiError {
	ret := _m.ctrl.Call(_m, "CreatePerson", name)
	ret0, _ := ret[0].(*errs.ApiError)
	return ret0
}

// CreatePerson indicates an expected call of CreatePerson
func (_mr *MockIPersonServiceMockRecorder) CreatePerson(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CreatePerson", reflect.TypeOf((*MockIPersonService)(nil).CreatePerson), arg0)
}

// AddPoints mocks base method
func (_m *MockIPersonService) AddPoints(id int, points int) *errs.ApiError {
	ret := _m.ctrl.Call(_m, "AddPoints", id, points)
	ret0, _ := ret[0].(*errs.ApiError)
	return ret0
}

// AddPoints indicates an expected call of AddPoints
func (_mr *MockIPersonServiceMockRecorder) AddPoints(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "AddPoints", reflect.TypeOf((*MockIPersonService)(nil).AddPoints), arg0, arg1)
}

// GetReais mocks base method
func (_m *MockIPersonService) GetReais(id int) (int, *errs.ApiError) {
	ret := _m.ctrl.Call(_m, "GetReais", id)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(*errs.ApiError)
	return ret0, ret1
}

// GetReais indicates an expected call of GetReais
func (_mr *MockIPersonServiceMockRecorder) GetReais(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetReais", reflect.TypeOf((*MockIPersonService)(nil).GetReais), arg0)
}

// GetPointsToMessage mocks base method
func (_m *MockIPersonService) GetPointsToMessage(id int) (string, *errs.ApiError) {
	ret := _m.ctrl.Call(_m, "GetPointsToMessage", id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*errs.ApiError)
	return ret0, ret1
}

// GetPointsToMessage indicates an expected call of GetPointsToMessage
func (_mr *MockIPersonServiceMockRecorder) GetPointsToMessage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetPointsToMessage", reflect.TypeOf((*MockIPersonService)(nil).GetPointsToMessage), arg0)
}
